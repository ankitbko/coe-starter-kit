# Example Build / Run
# docker build -t coe-cli . 
# docker run -it --rm coe-cli
FROM node:latest AS base
WORKDIR /coe-cli
ADD ./docs ./docs
ADD ./src ./src
ADD ./test ./test
ADD ./coe ./coe
ADD ./config ./config
ADD ./jest.config.js ./jest.config.js
ADD ./package.json ./package.json
ADD ./tsconfig.json ./tsconfig.json
RUN npm install --legacy-peer-deps && npm run build && npm link

FROM mcr.microsoft.com/azure-cli
WORKDIR /coe-cli
COPY --from=base /coe-cli/built /coe-cli/built
ADD ./docs ./docs
ADD ./coe ./coe
ADD ./src ./src
ADD ./config ./config
ADD ./package.json ./package.json
ENV ALPINE_MIRROR "http://dl-cdn.alpinelinux.org/alpine"
RUN echo "${ALPINE_MIRROR}/edge/main" >> /etc/apk/repositories
RUN apk add --no-cache nodejs-current npm --repository="http://dl-cdn.alpinelinux.org/alpine/edge/main"
RUN npm install --legacy-peer-deps
RUN npm link
# install the requirements for Powershell
RUN apk add --no-cache \
    ca-certificates \
    less \
    ncurses-terminfo-base \
    krb5-libs \
    libgcc \
    libintl \
    libssl1.1 \
    libstdc++ \
    tzdata \
    userspace-rcu \
    zlib \
    icu-libs \
    curl

RUN apk -X https://dl-cdn.alpinelinux.org/alpine/edge/main add --no-cache \
    lttng-ust

# Download the powershell '.tar.gz' archive
RUN curl -L https://github.com/PowerShell/PowerShell/releases/download/v7.2.6/powershell-7.2.6-linux-alpine-x64.tar.gz -o /tmp/powershell.tar.gz

# Create the target folder where powershell will be placed
RUN mkdir -p /opt/microsoft/powershell/7

# Expand powershell to the target folder
RUN tar zxf /tmp/powershell.tar.gz -C /opt/microsoft/powershell/7

# Set execute permissions
RUN chmod +x /opt/microsoft/powershell/7/pwsh

# Create the symbolic link that points to pwsh
RUN ln -s /opt/microsoft/powershell/7/pwsh /usr/bin/pwsh

CMD ["bash"]
